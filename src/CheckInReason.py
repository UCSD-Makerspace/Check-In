# Part of this file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path
from tkinter import *
from tkinter import ttk
from utils import *
from UserWelcome import UserWelcome
import logging

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets/check_in_reason_assets")

REASONS = [
    "Event/Workshop",
    "Tour",
    "Work/Study",
    "Basement Team Meeting",
    "Meeting with Staff",
    "Meeting with Mentor",
    "Meeting with Faculty",
    "Meeting with Community Partner",
]


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


########################################################
# This is the frame where users will manually check in #
########################################################


class CheckInReason(Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.photoList = []
        self.check_in_reason = StringVar()
        self.check_in_reason_entry = 0
        self.check_in_row = []
        self.option_window = None
        self.loadWidgets(controller)

    def show_options(self, controller):
        if self.option_window is not None:
            self.option_window.destroy()

        self.option_window = Toplevel(self)
        self.option_window.configure(bg="#153246")

        # Position the window near the button
        x = self.winfo_rootx() + 420
        y = self.winfo_rooty() + 200
        self.option_window.geometry(f"+{x}+{y}")

        for reason in REASONS:
            btn = Button(
                self.option_window,
                text=reason,
                font=52,
                command=lambda x=reason: self.select_option(x),
                width=40,
                bg="white",
            )
            btn.pack(fill="x", padx=5, pady=2)

    def select_option(self, selected):
        self.check_in_reason.set(selected)
        self.check_in_reason_button.configure(text=selected)
        if self.option_window:
            self.option_window.destroy()
            self.option_window = None

    def loadWidgets(self, controller):
        canvas = Canvas(
            self,
            bg="#153246",
            height=720,
            width=1280,
            bd=0,
            highlightthickness=0,
            relief="ridge",
        )

        canvas.place(x=0, y=0)
        image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))

        self.photoList.append(image_image_1)

        image_1 = canvas.create_image(640.0, 360.0, image=image_image_1)

        image_image_2 = PhotoImage(file=relative_to_assets("image_2.png"))

        self.photoList.append(image_image_2)

        image_2 = canvas.create_image(640.0, 360.0, image=image_image_2)

        image_image_3 = PhotoImage(file=relative_to_assets("image_3.png"))

        self.photoList.append(image_image_3)

        image_3 = canvas.create_image(640.0, 424.0, image=image_image_3)

        canvas.create_text(
            374.0,
            120.0,
            anchor="nw",
            text="What is the reason for\nyour visit today?",
            fill="#F5F0E6",
            font=("Montserrat", 48 * -1),
            justify="center",
        )

        button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))

        self.photoList.append(button_image_1)

        self.button_1 = Button(
            self,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.callCheckIn(controller),
            relief="flat",
        )
        self.button_1.place(x=465.0, y=598.0, width=349.0, height=71.0)

        self.check_in_reason.set(REASONS[0])
        self.check_in_reason_button = Button(
            self,
            text=self.check_in_reason.get(),
            font=52,
            command=lambda: self.show_options(controller),
            width=40,
            bg="white",
            relief="solid",
            bd=1,
        )
        self.check_in_reason_button.place(x=420.0, y=412.0)

    def clearEntries(self):
        self.check_in_reason.set(REASONS[0])
        self.check_in_reason_button.configure(text=REASONS[0])

    def setCheckInUser(self, row):
        self.check_in_row = row

    def callCheckIn(self, controller):
        self.check_in_row[7] = self.check_in_reason.get()
        self.clearEntries()
        activity_log = global_.sheets.get_activity_db()
        activity_log.append_row(self.check_in_row)
        global_.traffic_light.set_green()
        global_.app.get_frame(UserWelcome).displayName(self.check_in_row[2])
